@page "/reservation"
@using GroupAssignment2.Data

<div class="container-fluid">
    <h4 class="my-2">Reservation Finder</h4>

    <div class="d-flex flex-nowrap justify-content-between gap-4">
        <div class="w-25">
            <label>Code:</label>
            <input class="form-control" type="text" placeholder="Any" @bind="reservationCode" />
        </div>

        <div class="w-25">
            <label>Airline:</label>
            <select class="form-select" @bind="airline">
                <option value="Any">Any</option>
                @foreach (string airline in FlightManager.GetAirlines())
                {
                    <option value=@airline>@airline</option>
                }
            </select>
        </div>

        <div class="w-25">
            <label>Name:</label>
            <input class="form-control" type="text" placeholder="Any" @bind="name" />
        </div>

        <div class="w-25">
            <label></label>
            <button class="btn btn-primary w-100" @onclick="SearchReservation">Find reservations</button>
        </div>

    </div>

    <div class="flights-found-field">
        <h4 class="mt-5 mb-2">Reservations</h4>
        @if (reservationsFound.Count == 0)
        {
            <span class="formatted-field form-control">Loading...</span>
        }
        else
        {
            <select class="formatted-field form-control" @bind="selectedReservationStr">
                <option value="" selected disabled>Please select reservations...</option>
                @foreach (Reservation reservation in reservationsFound)
                {
                    <option value=@reservation.ToString()>@reservation.ToString()</option>
                }
            </select>
            @if (!string.IsNullOrEmpty(selectedReservationStr))
            {
                UpdateSelectedReservation();
            }
        }
    </div>


    <h4 class="mt-5 mb-0">Reserve</h4>
    <div class="reservation-container">
        <div class="form-group">
            <label>Reservation code:</label>
            <span class="form-control">@reservationCodeDisplay</span>
        </div>

        <div class="form-group">
            <label>Flight code:</label>
            <span class="form-control">@flightCode</span>
        </div>

        <div class="form-group">
            <label>Airline:</label>
            <span class="form-control">@airlineDisplay</span>
        </div>
        <div class="form-group">
            <label>Cost:</label>
            <span class="form-control">@cost</span>
        </div>
        <div class="form-group">
            <label>Name:</label>
            <input type="text" class="form-control" placeholder="Name" @bind="nameDisplay">
        </div>
        <div class="form-group">
            <label>Citizenship:</label>
            <input type="text" class="form-control" placeholder="Citizenship" @bind="citizenship">
        </div>
        <div class="form-group">
            <label>Status:</label>
            <select class="form-control" @bind="status">
                <option value="Active" selected>Active</option>
                <option value="Inactive">Inactive</option>
            </select>
        </div>
    </div>
    <div class="final-container">
        <div class="d-flex flex-column justify-content-center">
            <button class="btn btn-primary my-3 text-start" style="width: 200px" @onclick="UpdateReservation">Save</button>
            <span class="error text-start">@message</span>
        </div>
    </div>
</div>

@code {
    private string selectedReservationStr; //when select flight from flightFound List
    private string flightCode = "Flight Code";
    private string airline = "";
    private string airlineDisplay = "Airline";
    private string cost = "Cost";
    public string name = "Any";
    private string nameDisplay = "";
    public string citizenship = "";
    private string reservationCode = "Any";
    private string reservationCodeDisplay = "reservation code"; 
    private string originalStatus;
    private string status = "";
    public string message= "";

    ReservationManager reservationManager = new ReservationManager(); //populate reservations
    List<Reservation> reservations = ReservationManager.GetReservations();
    List<Reservation> reservationsFound = new List<Reservation>();
    Reservation selectedReservation;

    //Call FindReservation to search Reservation based on Reservation Code or Airline or Name
    public void  SearchReservation()
    {
        try
        {
            selectedReservationStr = null;
            reservationsFound.Clear();
            reservationsFound = ReservationManager.FindReservations(reservationCode, airline, name);
            message = "";
        }
        catch (Exception e)
        {
            message = e.Message;
        }

    }

    //implements data of the Flight
    public void UpdateSelectedReservation() 
    {
        string[] parts = selectedReservationStr.Split(",");
        foreach (Reservation reservation in reservations)
        {
            if (reservation.ReservationCode == parts[0])
            {
                selectedReservation = reservation;
            }
        }
        reservationCodeDisplay = selectedReservation.ReservationCode;
        flightCode = selectedReservation.Flight.FlightCode;
        airlineDisplay = selectedReservation.Flight.FlightName;
        cost = selectedReservation.Flight.Price.ToString();
        originalStatus = selectedReservation.Status;
    }

    //Save reservation
    public void UpdateReservation()
    {
        try
        {
            ReservationManager.CheckInformation(nameDisplay, citizenship, status, reservationCodeDisplay);
            selectedReservation.Name = nameDisplay;
            selectedReservation.Citizenship = citizenship;
            selectedReservation.Status = status;
            ReservationManager.SaveReservations(reservations);
            if (!selectedReservation.Status.Equals(originalStatus))
            {
                if (selectedReservation.Status.Equals("Inactive"))
                {
                    List<Flight> flights = FlightManager.AddFlights();
                    FlightManager.AddSeat(selectedReservation.Flight.FlightCode, flights);
                    FlightManager.WriteFlight(flights);
                }
                else if (selectedReservation.Status.Equals("Active"))
                {
                    List<Flight> flights = FlightManager.AddFlights();
                    FlightManager.ReduceSeat(selectedReservation.Flight.FlightCode, flights);
                    FlightManager.WriteFlight(flights);
                }
            }
            message = "Updated";    
            
        }
        catch (Exception e)
        {
            message = e.Message;
        }

    }

 }